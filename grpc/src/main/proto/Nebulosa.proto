syntax = "proto3";

import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "nebulosa.grpc";
option java_outer_classname = "NebulosaRpc";

// https://developers.google.com/protocol-buffers/docs/proto3
// https://grpc.io/docs/languages/java/basics/

message ConnectRequest {
  string host = 1;
  int32 port = 2;
}

message ConnectResponse {
  bool connected = 1;
}

message SerialConnection {
  string portName = 1;
  int32 baudRate = 2;
  optional int32 dataBits = 3;
  optional string parity = 4; // NONE = 0; ODD = 1; EVEN = 2; MARK = 3; SPACE = 4;
  optional string stopBits = 5; // NONE = 0; ONE = 1; ONE_POINT_FIVE = 2; TWO = 3;
}

message TcpConnection {
  string host = 1;
  int32 port = 2;
}

message CameraByNameRequest {
  string name = 1;
}

message OpenRequest {
  string name = 1;
  string equipmentType = 2; // IMAGING_CAMERA = 0; MOUNT = 1; GUIDING_CAMERA = 2; FILTER_WHEEL = 3; FOCUSER = 4; ROTATOR = 5; SWITCH = 6; DOME = 7; WEATHER = 8; FLAT_PANEL = 9; SAFETY_MONITOR = 10;
  string connectionType = 3; // NONE = 0; SERIAL = 1; TCP = 2; USB = 3;
  oneof connection {
    SerialConnection serial = 4;
    TcpConnection tcp = 5;
  }
}

message CloseRequest {
  string name = 1;
}

message OpenResponse {
  bool connected = 1;
}

message CameraExposureStartRequest {
  string equipmentType = 1;
  int64 exposure = 2;
  int32 amount = 3;
  int64 delay = 4;
  int32 x = 5;
  int32 y = 6;
  int32 width = 7;
  int32 height = 8;
  string frameFormat = 9;
  string frameType = 10; // LIGHT = 0; DARK = 1; FLAT = 2; BIAS = 3;
  int32 binX = 11;
  int32 binY = 12;
  optional bool save = 13;
  optional string savePath = 14;
  optional string autoSubFolderMode = 15; // OFF = 0; NOON = 1; MIDNIGHT = 2;
}

message CameraExposureTaskResponse {
  string state = 1; // IDLE = 0; BUSY = 1; OK = 2; ALERT = 3;
  double progress = 2;
  optional string imagePath = 3;
  bool finishedWithError = 4;
  bool capturing = 5;
  bool aborted = 6;
  bool finished = 7;
}

message CameraExposureStopRequest {
  string equipmentType = 1;
}

message CameraEquipment {
  string name = 1;
  bool connected = 2;
  bool hasCoolerControl = 3;
  bool isCoolerOn = 4;
  repeated string frameFormats = 5;
  bool canAbort = 6;
  int32 cfaOffsetX = 7;
  int32 cfaOffsetY = 8;
  string cfaType = 9; // RGGB = 0; BGGR = 1; GBRG = 2; GRBG = 3; GRGB = 4; GBGR = 5; RGBG = 6; BGRG = 7;
  int64 exposureMin = 10;
  int64 exposureMax = 11;
  string exposureState = 12; // IDLE = 0; BUSY = 1; OK = 2; ALERT = 3;
  bool hasCooler = 13;
  bool canSetTemperature = 14;
  double temperature = 15;
  bool canSubframe = 16;
  int32 minX = 17;
  int32 maxX = 18;
  int32 minY = 19;
  int32 maxY = 20;
  int32 minWidth = 21;
  int32 maxWidth = 22;
  int32 minHeight = 23;
  int32 maxHeight = 24;
  bool canBin = 25;
  int32 maxBinX = 26;
  int32 maxBinY = 27;
  bool hasDewHeader = 28;
  bool isDewHeaterOn = 29;
}

service Nebulosa {
  rpc Connect(ConnectRequest) returns (ConnectResponse);
  rpc IsConnected(google.protobuf.Empty) returns (ConnectResponse);
  rpc Disconnect(google.protobuf.Empty) returns (ConnectResponse);

  rpc ListCameras(google.protobuf.Empty) returns (stream CameraEquipment);
  rpc CameraByName(CameraByNameRequest) returns (CameraEquipment);

  rpc Open(OpenRequest) returns (OpenResponse);
  rpc Close(CloseRequest) returns (google.protobuf.Empty);

  rpc CameraExposureStart(CameraExposureStartRequest) returns (stream CameraExposureTaskResponse);
  rpc CameraExposureStop(CameraExposureStopRequest) returns (google.protobuf.Empty);
}
