package nebulosa.api.data.responses

import nebulosa.imaging.algorithms.CfaPattern
import nebulosa.indi.device.camera.Camera
import nebulosa.indi.protocol.PropertyState

data class CameraResponse(
    val name: String,
    val connected: Boolean,
    val exposuring: Boolean,
    val hasCoolerControl: Boolean,
    val coolerPower: Double,
    val cooler: Boolean,
    val hasDewHeater: Boolean,
    val dewHeater: Boolean,
    val frameFormats: List<String>,
    val canAbort: Boolean,
    val cfaOffsetX: Int,
    val cfaOffsetY: Int,
    val cfaType: CfaPattern,
    val exposureMin: Long,
    val exposureMax: Long,
    val exposureState: PropertyState,
    val exposure: Long,
    val hasCooler: Boolean,
    val canSetTemperature: Boolean,
    val canSubFrame: Boolean,
    val x: Int,
    val minX: Int,
    val maxX: Int,
    val y: Int,
    val minY: Int,
    val maxY: Int,
    val width: Int,
    val minWidth: Int,
    val maxWidth: Int,
    val height: Int,
    val minHeight: Int,
    val maxHeight: Int,
    val canBin: Boolean,
    val maxBinX: Int,
    val maxBinY: Int,
    val binX: Int,
    val binY: Int,
    val gain: Int,
    val gainMin: Int,
    val gainMax: Int,
    val offset: Int,
    val offsetMin: Int,
    val offsetMax: Int,
    val hasGuiderHead: Boolean,
    val pixelSizeX: Double,
    val pixelSizeY: Double,
    val canPulseGuide: Boolean,
    val pulseGuiding: Boolean,
    val hasThermometer: Boolean,
    val temperature: Double,
) {

    constructor(camera: Camera) : this(
        camera.name,
        camera.connected,
        camera.exposuring,
        camera.hasCoolerControl,
        camera.coolerPower,
        camera.cooler,
        camera.hasDewHeater,
        camera.dewHeater,
        camera.frameFormats,
        camera.canAbort,
        camera.cfaOffsetX,
        camera.cfaOffsetY,
        camera.cfaType,
        camera.exposureMin,
        camera.exposureMax,
        camera.exposureState,
        camera.exposure,
        camera.hasCooler,
        camera.canSetTemperature,
        camera.canSubFrame,
        camera.x,
        camera.minX,
        camera.maxX,
        camera.y,
        camera.minY,
        camera.maxY,
        camera.width,
        camera.minWidth,
        camera.maxWidth,
        camera.height,
        camera.minHeight,
        camera.maxHeight,
        camera.canBin,
        camera.maxBinX,
        camera.maxBinY,
        camera.binX,
        camera.binY,
        camera.gain,
        camera.gainMin,
        camera.gainMax,
        camera.offset,
        camera.offsetMin,
        camera.offsetMax,
        camera.hasGuiderHead,
        camera.pixelSizeX,
        camera.pixelSizeY,
        camera.canPulseGuide,
        camera.pulseGuiding,
        camera.hasThermometer,
        camera.temperature,
    )
}
